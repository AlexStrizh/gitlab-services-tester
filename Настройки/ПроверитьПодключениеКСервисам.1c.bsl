Вызвать ( "Общее.Начало" );
ЗакрытьВсе ();

Вызвать ( "Настройки.ОткрытьНастройки" );
Форма = Здесь ( "Проверка подключения к сервисам" );

// Очистим, если поле ранее заполнялось.
Если ( Взять ( "!ФормаАдрес" ) <> "" ) Тогда
	Очистить ("!ФормаАдрес");
КонецЕсли;

// Проверим падение теста при проверке пустого адреса.
Попытка

	Нажать("!ФормаПроверить");
	Стоп ( "Отсутствует сообщение об ошибке" );

Исключение

	// Проверим обязательное наличие сообщения об ошибке
	Если ( НайтиСообщения ( "Не указан адрес веб-сервиса*" ).Количество () = 0 ) тогда
	    Стоп ( "Отсутствует сообщение об ошибке" );
	КонецЕсли;

КонецПопытки;

Нажать ( "OK", Forms.Get1C () );

// Проверим падение теста на заведомо "кривом" адресе.
Адрес = __.АдресСервиса + "КривойАдресСервиса";

Здесь (Форма);
Ввести ( "!ФормаАдрес", Адрес );

Попытка

	Нажать("!ФормаПроверить");
	Стоп ( "Отсутствует сообщение об ошибке" );

Исключение

	// Проверим обязательное наличие сообщения об ошибке
	Если ( НайтиСообщения ( "Ошибка подключения к веб-сервису. Сервис не найден*" ).Количество () = 0 ) тогда
	    Стоп ( "Отсутствует сообщение об ошибке" );
	КонецЕсли;

КонецПопытки;

Нажать ( "OK", Forms.Get1C () );

// Корректный тест.
Адрес = __.АдресСервиса;

Здесь (Форма);
Ввести ( "!ФормаАдрес", Адрес );

Закрыть (Форма);

Вызвать ( "Настройки.ОткрытьНастройки" );
Форма = Здесь ( "Проверка подключения к сервисам" );

Проверить ( "!ФормаАдрес", Адрес);

Нажать("!ФормаПроверить");

Пауза (1);

Проверить ("!ФормаРезультат", "Доступны;Выключены");

Стек = Debug.Stack [ Debug.Level ];
Макет = RuntimeSrv.GetSpreadsheet ( стек.Module, стек.IsVersion ).Template;
Эталон = Макет.Область ( 1, 1 ).Текст;
Эталон = Экранировать ( Эталон );

Значение =  Взять ( "!ФормаJSON" );

// Сравнение с использованием регулярных выражений
Если ( НЕ Равны ( Эталон, Значение ) ) Тогда
	Стоп ( "Не равны" );
КонецЕсли;

&НаСервере
Функция Равны ( Эталон, Значение )

	exp = Regexp.Get ();
	// Будем требовать, чтобы строки были одинаковы с самого начала 
	exp.Pattern = "^" + Эталон;
	Возврат exp.Test ( Значение );
	
КонецФункции

&НаСервере
Функция Экранировать ( Значение )

	exp = Regexp.Get ();
	exp.Pattern = "[.*+?^${}()|[\]\\]";
	Стр = exp.Replace ( Значение, "\$&" );
	Возврат Output.Sformat ( Стр, Новый Структура ( "версия", ".+" ) );
	
КонецФункции