Вызвать ( "Общее.Начало" );

ЗакрытьВсе ();

// Открываем форму проверки подключения к сервисам.
Вызвать ( "Настройки.ОткрытьНастройки" );
ФормаНастроек = Здесь ( "Настройки сервисов*" );
Вызвать ( "Настройки.ОткрытьНастройки.ОткрытьПроверкуПодключения" );
Форма = Здесь ( "Проверка подключения к сервисам" );

// Очистим, если поле ранее заполнялось.
Если ( Взять ( "!ФормаАдрес" ) <> "" ) Тогда
	Очистить ("!ФормаАдрес");
КонецЕсли;

// Проверим падение теста при проверке пустого адреса.
Попытка

	Нажать("!ФормаПроверить");
	Стоп ( "Отсутствует сообщение об ошибке" );

Исключение

	// Проверим обязательное наличие сообщения об ошибке
	Если ( НайтиСообщения ( "Не указан адрес веб-сервиса*" ).Количество () = 0 ) тогда
	    Стоп ( "Отсутствует сообщение об ошибке" );
	КонецЕсли;

КонецПопытки;

Нажать ( "OK", Forms.Get1C () );

// Проверим падение теста на заведомо "кривом" адресе.
Адрес = __.АдресСервиса + "КривойАдресСервиса";
Здесь (Форма);
Ввести ( "!ФормаАдрес", Адрес );
Нажать("!ФормаПроверить");
Проверить ("!ФормаРезультат", "Сервис недоступен.");

// Проверим сервис по корректному адресу.
Адрес = __.АдресСервиса;
Ввести ( "!ФормаАдрес", Адрес );
Закрыть (Форма);

// Включим загрузку, если была выключена.
Здесь ( "Настройки сервисов*" );
Флаг = Взять ( "!ЗагружатьФайлыИзВнешнегоХранилища" );

Если (Флаг = Строка(Ложь)) Тогда
	Нажать( "!ЗагружатьФайлыИзВнешнегоХранилища" );
	Нажать( "!ФормаЗаписать" );
КонецЕсли;

Вызвать ( "Настройки.ОткрытьНастройки.ОткрытьПроверкуПодключения" );

Форма = Здесь ( "Проверка подключения к сервисам" );
Проверить ( "!ФормаАдрес", Адрес);
Нажать("!ФормаПроверить");

Пауза (1);
Проверить ("!ФормаРезультат", "Сервис доступен. Статус работы: включен.");

Стек = Debug.Stack [ Debug.Level ];
Макет = RuntimeSrv.GetSpreadsheet ( стек.Module, стек.IsVersion ).Template;
Эталон = Макет.Область ( 1, 1 ).Текст;
Эталон = Экранировать ( Эталон );

Значение =  Взять ( "!ФормаJSON" );

// Сравнение с использованием регулярных выражений
Если ( НЕ Равны ( Эталон, Значение ) ) Тогда
	Стоп ( "Не равны" );
КонецЕсли;

Закрыть (Форма);

// Выключим загрузку, если была включена.
Здесь ( "Настройки сервисов*" );

Флаг = Взять ( "!ЗагружатьФайлыИзВнешнегоХранилища" );
Если (Флаг = Строка(Истина)) Тогда
	Нажать( "!ЗагружатьФайлыИзВнешнегоХранилища" );
	Нажать( "!ФормаЗаписать" );
КонецЕсли;

Вызвать ( "Настройки.ОткрытьНастройки.ОткрытьПроверкуПодключения" );

Форма = Здесь ( "Проверка подключения к сервисам" );
Проверить ( "!ФормаАдрес", Адрес);
Нажать("!ФормаПроверить");

Пауза (1);

Проверить ("!ФормаРезультат", "Сервис доступен. Статус работы: выключен.");
Закрыть (Форма);

// Включим загрузку, если была выключена.
Здесь ( "Настройки сервисов*" );

Флаг = Взять ( "!ЗагружатьФайлыИзВнешнегоХранилища" );
Если (Флаг = Строка(Ложь)) Тогда
	Нажать( "!ЗагружатьФайлыИзВнешнегоХранилища" );
	Нажать( "!ФормаЗаписать" );
КонецЕсли;

&НаСервере
Функция Равны ( Эталон, Значение )

	exp = Regexp.Get ();
	// Будем требовать, чтобы строки были одинаковы с самого начала 
	exp.Pattern = "^" + Эталон;
	Возврат exp.Test ( Значение );

КонецФункции

&НаСервере
Функция Экранировать ( Значение )

	exp = Regexp.Get ();
	exp.Pattern = "[.*+?^${}()|[\]\\]";
	Стр = exp.Replace ( Значение, "\$&" );
	Возврат Output.Sformat ( Стр, Новый Структура ( "версия", ".+" ) );

КонецФункции